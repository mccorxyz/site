#!/bin/bash
name="Jacob McCormick"
webdir="$PWD"
website="https://mccor.xyz/" # Keep a trailing slash.
email="jacob@mccor.xyz"

css="../css/main.css"
indexfile="blog.html"
indexfile2="index.html"
tagdir="$PWD/tag"
rssfile="rss.xml"
archivefile="$webdir/blog/.htaccess"
[ -z "$EDITOR" ] && EDITOR="code"

[ ! -d "$webdir/blog/.drafts" ] &&
read -erp "Initialize blog in $webdir?" ask &&
	if [ "$ask" = "y" ]; then
	printf "Initializing blog system...\\n"
	mkdir -pv "$webdir/blog/.drafts" || printf "Error. Do you have write permissions in this directory?\\n"
	echo "Options +Indexes" > "$archivefile"
else
	exit
fi

addNewTagPage() {
	read -erp "Enter a tag name: " tagname
	printf "<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n<title>%s</title>\\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\\n<meta name=\"viewport\" content=\"width=<device-width>, initial-scale=1.0\">\\n<link rel=\"shortcut icon\" href=\"../img/favicon.ico\">\\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/main.css\">\\n<meta charset='utf-8'/>\\n</head>\\n<body>\\n<h1>%s</h1>\\n<ul>\\n<!-- LB -->\\n</ul>\\n<small><a href=\"../index.html\">← Home</a></small>\\n</body>\\n\\n</html>" "${tagname^} Articles" "${tagname^} Articles" > "$tagdir/$tagname.html"

	tmpdir3=$(mkdir -d)
	printf "<a class=\"topic\" href=\"tag/$tagname.html\">${tagname^}</a>" > "$tmpdir3/link"
	# add topic to topic-cloud
	sed -i "/<!-- TOPICS -->/r $tmpdir3/link" "$indexfile2"
}

handleTags() {
	while :
	do
		printf "Listing contents of %s\\n" $tagdir
		if [ "$(ls $tagdir | wc -l)" = "0" ]; then
			read -erp "There are no tags, would you like to add one? [y/N]" ask
			if [ "$ask" = "y" ]; then 
				addNewTagPage
			fi
		fi
		ls -rc $tagdir | sed '$ a new tag' | cut -f 1 -d '.' | nl
		read -erp "Pick a tag for $(echo $1 | cut -f 1 -d '.'); type 0 to quit " number

		if [ $number = "0" ]; then
			exit
		fi

		if [ $number -gt "$(ls $tagdir | wc -l)" ]; then
			read -erp "Enter a tag name: " tagname2
			printf "<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n<title>%s</title>\\n<meta http-equiv=\"X-UA-Compatible\" content=\"IE=edge\">\\n<meta name=\"viewport\" content=\"width=<device-width>, initial-scale=1.0\">\\n<link rel=\"shortcut icon\" href=\"../img/favicon.ico\">\\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/main.css\">\\n<meta charset='utf-8'/>\\n</head>\\n<body>\\n<h1>%s</h1>\\n<ul>\\n<!-- LB -->\\n</ul>\\n<small><a href=\"../index.html\">← Home</a></small>\\n</body>\\n\\n</html>" "${tagname2^} Articles" "${tagname2^} Articles" > "$tagdir/$tagname2.html"

			tmpdir4=$(mktemp -d)
			printf "<a class=\"topic\" href=\"tag/$tagname2.html\">${tagname2^}</a>" > "$tmpdir4/link"
			# add topic to topic-cloud
			sed -i "/<!-- TOPICS -->/r $tmpdir4/link" "$indexfile2"
			choice=$tagname2
			else
				choice="$(ls -rc $tagdir | nl | grep -w " $number" | cut -f 1 -d '.' | awk '{print $2}')"
		fi

		tmpdir2=$(mktemp -d)

		# add tag to article
		printf "<li><a href=\"%s\">%s</a></li>" "../tag/$choice.html" "${choice^}" > "$tmpdir2/article"
		sed -i "/<!--TAGLIST--><ul id=\"taglist\">/r $tmpdir2/article" "$1"

		# add tagged page to rolling tag page
		printf "<li>%s &ndash; <a href=\"../blog/%s\">%s</a></li>\\n" "$(date '+%Y %b %d')" "$basefile" "$realname" > "$tmpdir2/index"
		sed -i "/<!-- LB -->/r $tmpdir2/index" "$tagdir/$choice.html"
	done
}

newpost() { read -erp "Give a title for your post:
	" title
	echo "$title" | grep -q "\"" && printf "Double quotation marks (\") are not allowed in entry titles.\\n" && exit
	url="$(echo "$title" | iconv -cf UTF-8 -t ASCII//TRANSLIT | tr -d '[:punct:]' | tr '[:upper:]' '[:lower:]' | tr ' ' '-' | sed "s/-\+/-/g;s/\(^-\|-\$\)//g")"
	echo "AddDescription \"$title\" \"$url.html\"" >>  "$archivefile"|| { echo "Error: Is $archivefile writeable?"; exit; }
	( [ -f "$webdir/blog/.drafts/$url.html" ] || [ -f "$webdir/blog/$url.html" ] ) && echo "There is already an existing draft or post of that same name/URL." && exit
	$EDITOR "$webdir/blog/.drafts/$url.html" ;}

listandReturn() {
	printf "Listing contents of %s\\n" "$1"
	case "$(ls "$1" | wc -l)" in
		0) echo "There's nothing to $2." && exit 1 ;;
		1) number=1 && printf "There's only one entry to %s.\\nDefaulting selection to %s\\n" "$2" "$(ls -rc "$1" | awk -F '/' '{print $NF}')" ;;
		*) ls -rc "$1" | awk -F '/' '{print $NF}' | nl
                read -erp "Pick an entry by number to $2, or press Ctrl-C to cancel. " number ;;
	esac
	chosen="$(ls -rc "$1" | nl | grep -w " $number" | awk '{print $2}')"
	basefile="$(basename "$chosen")" && base="${basefile%.*}"
}

publish() { \
	delete draft
	htaccessentry=$(grep "$basefile" "$archivefile")
	realname="$(echo "$htaccessentry" | cut -d'"' -f2)"
	rssdate="$(grep "$basefile" blog/.htaccess | sed "s/.*\.html\"* *#*//g" | tr -d '\n')"
	[ -z "$rssdate" ] && rssdate="$(LC_TIME=en_US date '+%a, %d %b %Y %H:%M:%S %z')" # RSS date formats must comply with standards to validate.
	webdate="$(date '+%a, %d %b %Y %H:%M:%S')" # But this visible date you can set to any format.
	tmpdir=$(mktemp -d)
	printf "<!DOCTYPE html>\\n<html lang=\"en\">\\n<head>\\n<title>%s</title>\\n<link rel=\"shortcut icon\" href=\"../img/favicon.ico\">\\n<link rel=\"stylesheet\" type=\"text/css\" href='%s'>\\n<link rel=\"stylesheet\" type=\"text/css\" href=\"../css/blog.css\">\\n<meta charset=\"utf-8\"/>\\n</head>\\n<body>\\n<h1>%s</h1>\\n<p class=\"date\">%s</p>\\n<small><a href=\"../index.html\">← Home</a></small>\\n<hr>\\n%s\\n<!--TAGLIST--><ul id=\"taglist\">\\n</ul>\\n<footer>by <strong><a href=\"%s\">%s</a> <a href=\"%s?subject='%s'\">(Reply-to)</a></strong></footer>\\n</body>\\n\\n</html>" "$realname" "$css" "$realname" "$webdate" "$(cat "$webdir/blog/.drafts/$basefile")" "$website" "$name" "$email" "$realname" > "$webdir/blog/$basefile"
	
	printf "\\n<item>\\n<title>%s</title>\\n<guid>%sblog/%s</guid>\\n<link>%sblog/%s</link>\\n<pubDate>%s</pubDate>\\n<description><![CDATA[\\n%s\\n<small><a href=\"mailto:%s?subject='%s'\">(Reply-to)</a></small>]]></description>\\n</item>\\n\\n" "$realname" "$website" "$basefile" "$website" "$basefile" "$rssdate" "$(cat "$webdir/blog/.drafts/$basefile")" "$email" "$realname" >  "$tmpdir/rss"
	
	printf "<div class=\"entry\">\\n<h2 id=\"%s\">%s</h2>\\n<small>[<a href=\"#%s\">link</a>&mdash;<a href=\"%s\">standalone</a>]</small>\\n%s\\n<small>%s</small>\\n</div>\\n" "$base" "$realname" "$base" "blog/$basefile" "$(cat "$webdir/blog/.drafts/$basefile")" "$webdate" > "$tmpdir/html"
	
	printf "<li>%s &ndash; <a href=\"blog/%s\">%s</a></li>\\n" "$(date '+%Y %b %d')" "$basefile" "$realname" > "$tmpdir/index"
	
	# Actually writing changes
	sed -i "/<!-- LB -->/r $tmpdir/rss" "$rssfile"
	sed -i "/<!-- LB -->/r $tmpdir/index" "$indexfile"
	sed -i "/<!-- LB -->/r $tmpdir/index" "$indexfile2"

	# Manage .htaccess
	sed -i "/ \"$base.html\"/d" "$archivefile"
	echo "AddDescription \"$realname\" \"$basefile\" #$rssdate" >> "$archivefile"
	
	rm -f "$webdir/blog/.drafts/$chosen"

	handleTags "blog/$basefile"
}

confirm() { read -erp "Really $1 \"$base\"? (y/N) " choice && echo "$choice" | grep -qi "^y$" || exit 1 ;}

delete() { \
	sed -i "/<item/{:a;N;/<\\/item>/!ba};/#$base<\\/guid/d" "$rssfile"
	sed -i "/<li>.*<a href=\"blog\\/$base.html\">/d" "$indexfile"
	sed -i "/<li>.*<a href=\"blog\\/$base.html\">/d" "$indexfile2"
	rm -f "$webdir/blog/$basefile" && [[ "$1" != "draft" ]] && printf "Old blog entry removed.\\n";}

revise() { awk '/^<small>\[/{flag=1;next}/<footer>/{flag=0}flag' "$webdir/blog/$chosen" > "$webdir/blog/.drafts/$basefile"
	"$EDITOR" "$webdir/blog/.drafts/$basefile"
	printf "Revision stored in blog/.drafts. Publish as normal entry when desired.\\n" ;}

case "$1" in
	n*) newpost ;;
	e*) listandReturn "$webdir"/blog/.drafts/ edit && "$EDITOR" "$webdir/blog/.drafts/$chosen" ;;
	p*) listandReturn "$webdir"/blog/.drafts/ publish && publish ;;
	t*) listandReturn "$webdir"/blog/.drafts/ trash && confirm trash && rm -f "$webdir/blog/.drafts/$chosen" && sed -i "/ \"$base.html\"/d" "$archivefile" ; printf "Draft deleted.\\n" ;;
	d*) listandReturn "$webdir"/blog/ delete && confirm delete && delete && sed -i "/ \"$base.html\"/d" "$archivefile" ;;
	r*) listandReturn "$webdir"/blog/ revise && revise ;;
	*) printf "lb blog system by Luke Smith <luke@lukesmith.xyz>\\nUsage:\\n  lb n:\\tnew draft\\n  lb e:\\tedit draft\\n  lb p:\\tpublish/finalize draft\\n  lb r:\\trevise published entry\\n  lb t:\\tdiscard draft\\n  lb d:\\tdelete published entry\\n\\nBe sure to have the following pattern added to your RSS feed, blog file and blog index:\\n\\n<!-- LB -->\\n\\nNew content will be added directly below that sequence. This is required.\\nSee https://github.com/LukeSmithxyz/lb for more.\\n" ;;
esac
